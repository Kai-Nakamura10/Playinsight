name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  scan_ruby:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: ruby/setup-ruby@v1
        with: { ruby-version: .ruby-version, bundler-cache: true }
      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: ruby/setup-ruby@v1
        with: { ruby-version: .ruby-version, bundler-cache: true }
      - name: Lint code for consistent style
        run: bin/rubocop -f github

  test:
    runs-on: ubuntu-latest

    # OIDC 必須
    permissions:
      id-token: write
      contents: read

    env:
      RAILS_ENV: test
      NODE_ENV: test
      AWS_REGION: ap-northeast-1

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        ports: [ "5432:5432" ]
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y build-essential git libpq-dev libyaml-dev node-gyp pkg-config python-is-python3

      - uses: actions/checkout@v5

      - uses: ruby/setup-ruby@v1
        with: { ruby-version: .ruby-version, bundler-cache: true }

      # ★ AWSを使うテストがあるなら、ここで先に OIDC 認証しておく
      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::993704921163:role/Playinsight-role
          aws-region: ap-northeast-1
          role-session-name: github-actions
          # audience: sts.amazonaws.com   # 既定なので省略可

      - name: Who am I?
        run: aws sts get-caller-identity

      - name: Create database and migrate
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432
        run: |
          bin/rails db:create
          bin/rails db:migrate

      - name: Prepare DB
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/sotuseiapp_test
        run: bin/rails db:prepare

      - name: Run tests
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432
        run: bin/rails db:test:prepare test test:system

      - name: Keep screenshots from failed system tests
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: screenshots
          path: ${{ github.workspace }}/tmp/screenshots
          if-no-files-found: ignore
